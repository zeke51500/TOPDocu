{"version":3,"file":"index.umd.js","sources":["../node_modules/markdown-it/lib/common/entities.js","../node_modules/uc.micro/categories/P/regex.js","../node_modules/mdurl/encode.js","../node_modules/mdurl/decode.js","../node_modules/mdurl/format.js","../node_modules/mdurl/parse.js","../node_modules/mdurl/index.js","../node_modules/uc.micro/properties/Any/regex.js","../node_modules/uc.micro/categories/Cc/regex.js","../node_modules/uc.micro/categories/Cf/regex.js","../node_modules/uc.micro/categories/Z/regex.js","../node_modules/uc.micro/index.js","../node_modules/markdown-it/lib/common/utils.js","../src/index.ts"],"sourcesContent":["// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type MarkdownIt from \"markdown-it/lib/index.js\"\nimport { escapeHtml } from \"markdown-it/lib/common/utils.js\"\nimport type Renderer from \"markdown-it/lib/renderer.js\"\nimport type StateBlock from \"markdown-it/lib/rules_block/state_block.js\"\nimport type StateInline from \"markdown-it/lib/rules_inline/state_inline.js\"\n\nexport interface IRenderOptions {\n  displayMode: boolean\n}\n\nexport interface IOptions {\n  /** Parse inline math when there is space after/before the opening/closing `$`, e.g. `$ a $` */\n  allow_space?: boolean\n  /** Parse inline math when there is a digit before/after the opening/closing `$`, e.g. `1$` or `$2` */\n  allow_digits?: boolean\n  /** Search for double-dollar math within inline contexts */\n  double_inline?: boolean\n  /** Capture math blocks with label suffix, e.g. `$$a=1$$ (eq1)` */\n  allow_labels?: boolean\n  /** function to normalize the label, by default replaces whitespace with `-` */\n  labelNormalizer?: (label: string) => string\n  /** The render function for math content */\n  renderer?: (content: string, options: IRenderOptions) => string\n  /** The render function for label content */\n  labelRenderer?: (label: string) => string\n}\n\nconst OptionDefaults: Required<IOptions> = {\n  allow_space: true,\n  allow_digits: true,\n  double_inline: true,\n  allow_labels: true,\n  labelNormalizer(label) {\n    return label.replace(/[\\s]+/g, \"-\")\n  },\n  renderer(content) {\n    return escapeHtml(content)\n  },\n  labelRenderer(label) {\n    return `<a href=\"#${label}\" class=\"mathlabel\" title=\"Permalink to this equation\">¶</a>`\n  }\n}\n\n/**\n * A markdown-it plugin for parsing dollar delimited math,\n * e.g. inline: ``$a=1$``, block: ``$$b=2$$`\n */\nexport function dollarmathPlugin(md: MarkdownIt, options?: IOptions): void {\n  const fullOptions = { ...OptionDefaults, ...options }\n  md.inline.ruler.before(\"escape\", \"math_inline\", math_inline_dollar(fullOptions))\n  md.block.ruler.before(\"fence\", \"math_block\", math_block_dollar(fullOptions))\n\n  const createRule =\n    (\n      opts: IRenderOptions & { inline?: boolean; hasLabel?: boolean }\n    ): Renderer.RenderRule =>\n    (tokens, idx) => {\n      const content = tokens[idx].content.trim()\n      let res: string\n      try {\n        res = fullOptions.renderer(content, { displayMode: opts.displayMode })\n      } catch (err) {\n        res = md.utils.escapeHtml(`${content}:${(err as Error).message}`)\n      }\n      const className = opts.inline ? \"inline\" : \"block\"\n      const tag = opts.displayMode ? \"div\" : \"span\"\n      const newline = opts.inline ? \"\" : \"\\n\"\n      const id = tokens[idx].info\n      const label = opts.hasLabel ? `${fullOptions.labelRenderer(id)}` : \"\"\n      return (\n        [\n          `<${tag} ${id ? `id=\"${id}\" ` : \"\"}class=\"math ${className}\">`,\n          label,\n          res,\n          `</${tag}>`\n        ]\n          .filter(v => !!v)\n          .join(newline) + newline\n      )\n    }\n\n  md.renderer.rules[\"math_inline\"] = createRule({\n    displayMode: false,\n    inline: true\n  })\n  md.renderer.rules[\"math_inline_double\"] = createRule({\n    displayMode: true,\n    inline: true\n  })\n  md.renderer.rules[\"math_block\"] = createRule({\n    displayMode: true\n  })\n  md.renderer.rules[\"math_block_label\"] = createRule({\n    displayMode: true,\n    hasLabel: true\n  })\n}\n\n// Exporting both a default and named export is necessary for Jest in some cases\nexport default dollarmathPlugin\n\n/** Test if dollar is escaped */\nfunction isEscaped(state: StateInline, back_pos: number, mod = 0): boolean {\n  // count how many backslashes are before the current position\n  let backslashes = 0\n\n  while (back_pos >= 0) {\n    back_pos = back_pos - 1\n    if (state.src.charCodeAt(back_pos) === 0x5c) {\n      backslashes += 1\n    } else {\n      break\n    }\n  }\n\n  if (backslashes === 0) {\n    return false\n  }\n\n  // if an odd number of backslashes then ignore\n  if (backslashes % 2 !== mod) {\n    return true\n  }\n\n  return false\n}\n\n/** Generate inline dollar rule  */\nfunction math_inline_dollar(\n  options: IOptions\n): (state: StateInline, silent: boolean) => boolean {\n  /** Inline dollar rule:\n   *\n    - Initial check:\n        - check if first character is a $\n        - check if the first character is escaped\n        - check if the next character is a space (if not allow_space)\n        - check if the next character is a digit (if not allow_digits)\n    - Advance one, if allow_double\n    - Find closing (advance one, if allow_double)\n    - Check closing:\n        - check if the previous character is a space (if not allow_space)\n        - check if the next character is a digit (if not allow_digits)\n    - Check empty content\n   *\n  */\n  function math_inline_dollar_rule(state: StateInline, silent: boolean): boolean {\n    if (state.src.charCodeAt(state.pos) !== 0x24 /* $ */) {\n      return false\n    }\n    if (!options.allow_space) {\n      // whitespace not allowed straight after opening $\n      if (state.md.utils.isWhiteSpace(state.src.charCodeAt(state.pos + 1))) {\n        return false\n      }\n    }\n    if (!options.allow_digits) {\n      // digit not allowed straight before opening $\n      const char = state.src.charAt(state.pos - 1)\n      if (!!char && char.trim() !== \"\" && !isNaN(Number(char))) {\n        return false\n      }\n    }\n    if (isEscaped(state, state.pos)) {\n      return false\n    }\n    // check if double dollar (if allowed)\n    let is_double = false\n    if (options.double_inline && state.src.charCodeAt(state.pos + 1) === 0x24) {\n      is_double = true\n    }\n    // find closing $\n    let pos = state.pos + 1 + (is_double ? 1 : 0)\n    let found_closing = false\n    let end = -1\n    while (!found_closing) {\n      end = state.src.indexOf(\"$\", pos)\n      if (end === -1) {\n        return false\n      }\n      if (isEscaped(state, end)) {\n        pos = end + 1\n        continue\n      }\n      if (is_double && state.src.charCodeAt(end + 1) !== 0x24) {\n        pos = end + 1\n        continue\n      }\n      if (is_double) {\n        end += 1\n      }\n      found_closing = true\n    }\n    if (!found_closing) {\n      return false\n    }\n    if (!options.allow_space) {\n      // whitespace not allowed straight before closing $\n      const charCode = state.src.charCodeAt(end - 1)\n      if (state.md.utils.isWhiteSpace(charCode)) {\n        return false\n      }\n    }\n    if (!options.allow_digits) {\n      // digit not allowed straight after closing $\n      const char = state.src.charAt(end + 1)\n      if (!!char && char.trim() !== \"\" && !isNaN(Number(char))) {\n        return false\n      }\n    }\n    let text = state.src.slice(state.pos + 1, end)\n    if (is_double) {\n      text = state.src.slice(state.pos + 2, end - 1)\n    }\n    if (!text) {\n      // ignore empty\n      return false\n    }\n    if (!silent) {\n      const token = state.push(\n        is_double ? \"math_inline_double\" : \"math_inline\",\n        \"math\",\n        0\n      )\n      token.content = text\n      token.markup = is_double ? \"$$\" : \"$\"\n    }\n    state.pos = end + 1\n    return true\n  }\n  return math_inline_dollar_rule\n}\n\n/** Match a trailing label for a math block */\nfunction matchLabel(lineText: string, end: number): { label?: string; end: number } {\n  // reverse the line and match\n  const eqnoMatch = lineText\n    .split(\"\")\n    .reverse()\n    .join(\"\")\n    .match(/^\\s*\\)(?<label>[^)$\\r\\n]+?)\\(\\s*\\${2}/)\n  if (eqnoMatch && eqnoMatch.groups) {\n    const label = eqnoMatch.groups[\"label\"].split(\"\").reverse().join(\"\")\n    end = end - ((eqnoMatch.index || 0) + eqnoMatch[0].length)\n    return { label, end }\n  }\n  return { end }\n}\n\n/** Generate inline dollar rule */\nfunction math_block_dollar(\n  options: IOptions\n): (state: StateBlock, startLine: number, endLine: number, silent: boolean) => boolean {\n  /** Block dollar rule */\n  function math_block_dollar_rule(\n    state: StateBlock,\n    startLine: number,\n    endLine: number,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    silent: boolean\n  ): boolean {\n    let haveEndMarker = false\n    const startPos = state.bMarks[startLine] + state.tShift[startLine]\n    let end = state.eMarks[startLine]\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) {\n      return false\n    }\n    if (startPos + 2 > end) {\n      return false\n    }\n    if (\n      state.src.charCodeAt(startPos) != 0x24 ||\n      state.src.charCodeAt(startPos + 1) != 0x24\n    ) {\n      return false\n    }\n    // search for end of block\n    let nextLine = startLine\n    let label: undefined | string = undefined\n    // search for end of block on same line\n    let lineText = state.src.slice(startPos, end)\n    if (lineText.trim().length > 3) {\n      if (lineText.trim().endsWith(\"$$\")) {\n        haveEndMarker = true\n        end = end - 2 - (lineText.length - lineText.trim().length)\n      } else if (options.allow_labels) {\n        const output = matchLabel(lineText, end)\n        if (output.label !== undefined) {\n          haveEndMarker = true\n          label = output.label\n          end = output.end\n        }\n      }\n    }\n\n    // search for end of block on subsequent line\n    let start: number\n    if (!haveEndMarker) {\n      while (nextLine + 1 < endLine) {\n        nextLine += 1\n        start = state.bMarks[nextLine] + state.tShift[nextLine]\n        end = state.eMarks[nextLine]\n        lineText = state.src.slice(start, end)\n        if (lineText.trim().endsWith(\"$$\")) {\n          haveEndMarker = true\n          end = end - 2 - (lineText.length - lineText.trim().length)\n          break\n        }\n        if (lineText.trim() == \"\") {\n          break // blank lines are not allowed within $$\n        }\n        if (options.allow_labels) {\n          const output = matchLabel(lineText, end)\n          if (output.label !== undefined) {\n            haveEndMarker = true\n            label = output.label\n            end = output.end\n            break\n          }\n        }\n      }\n    }\n    if (!haveEndMarker) {\n      return false\n    }\n\n    state.line = nextLine + (haveEndMarker ? 1 : 0)\n\n    const token = state.push(label ? \"math_block_label\" : \"math_block\", \"math\", 0)\n    token.block = true\n    token.content = state.src.slice(startPos + 2, end).trim()\n    token.markup = \"$$\"\n    token.map = [startLine, state.line]\n    if (label) {\n      token.info = options.labelNormalizer ? options.labelNormalizer(label) : label\n    }\n    return true\n  }\n  return math_block_dollar_rule\n}\n"],"names":["entities","require$$0","regex","encodeCache","getEncodeCache","exclude","i","ch","cache","String","fromCharCode","test","push","toString","toUpperCase","slice","length","charCodeAt","encode","string","keepEscaped","l","code","nextCode","result","defaultChars","encodeURIComponent","componentChars","encode_1","decodeCache","getDecodeCache","decode","replace","seq","b1","b2","b3","b4","chr","parseInt","decode_1","format","url","protocol","slashes","auth","hostname","indexOf","port","pathname","search","hash","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","parse","prototype","lowerProto","hec","rest","trim","split","simplePath","exec","proto","toLowerCase","substr","match","hostEnd","atSign","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","unshift","join","qm","mdurl","require$$1","require$$2","require$$3","uc_micro","Any","Cc","Cf","P","Z","require$$4","_class","obj","Object","call","isString","_hasOwnProperty","hasOwnProperty","has","object","key","assign","sources","Array","arguments","forEach","source","TypeError","keys","arrayReplaceAt","src","pos","newElements","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","replaceEntityPattern","name","unescapeMd","str","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","UNICODE_PUNCT_RE","isPunctChar","isMdAsciiPunct","normalizeReference","exports","lib","ucmicro"],"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"}