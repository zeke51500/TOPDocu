import { fileWarn, normalizeLabel, RuleId } from 'myst-common';
const REF_PATTERN = /^(.+?)<([^<>]+)>$/; // e.g. 'Labeled Term <term>'
export const termRole = {
    name: 'term',
    body: {
        type: String,
        required: true,
    },
    run(data, vfile) {
        var _a;
        const body = data.body;
        const match = REF_PATTERN.exec(body);
        const [, modified, rawLabel] = match !== null && match !== void 0 ? match : [];
        const { label, identifier } = (_a = normalizeLabel(rawLabel !== null && rawLabel !== void 0 ? rawLabel : body)) !== null && _a !== void 0 ? _a : {};
        if (!identifier) {
            fileWarn(vfile, `Unknown {term} role with body: "${body}"`, {
                source: 'role:term',
                node: data.node,
                ruleId: RuleId.roleBodyCorrect,
            });
        }
        const crossRef = {
            type: 'crossReference',
            label,
            identifier: `term-${identifier}`,
        };
        if (modified)
            crossRef.children = [{ type: 'text', value: modified.trim() }];
        return [crossRef];
    },
};
