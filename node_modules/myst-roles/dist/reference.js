import { normalizeLabel } from 'myst-common';
const REF_PATTERN = /^(.+?)<([^<>]+)>$/; // e.g. 'Labeled Reference <ref>'
export const refRole = {
    name: 'ref',
    alias: ['eq', 'numref', 'prf:ref'],
    body: {
        type: String,
        required: true,
    },
    run(data) {
        const body = data.body;
        const match = REF_PATTERN.exec(body);
        const [, modified, rawLabel] = match !== null && match !== void 0 ? match : [];
        const { label, identifier } = normalizeLabel(rawLabel !== null && rawLabel !== void 0 ? rawLabel : body) || {};
        const crossRef = { type: 'crossReference', kind: data.name, identifier, label };
        if (modified)
            crossRef.children = [{ type: 'text', value: modified.trim() }];
        return [crossRef];
    },
};
