export const CREDIT_URL = 'https://credit.niso.org/';
/**
 * enum of the CRediT roles (https://credit.niso.org)
 */
export var CreditRole;
(function (CreditRole) {
    CreditRole["Conceptualization"] = "Conceptualization";
    CreditRole["DataCuration"] = "Data curation";
    CreditRole["FormalAnalysis"] = "Formal analysis";
    CreditRole["FundingAcquisition"] = "Funding acquisition";
    CreditRole["Investigation"] = "Investigation";
    CreditRole["Methodology"] = "Methodology";
    CreditRole["ProjectAdministration"] = "Project administration";
    CreditRole["Resources"] = "Resources";
    CreditRole["Software"] = "Software";
    CreditRole["Supervision"] = "Supervision";
    CreditRole["Validation"] = "Validation";
    CreditRole["Visualization"] = "Visualization";
    CreditRole["WritingOriginalDraft"] = "Writing \u2013 original draft";
    CreditRole["WritingReviewEditing"] = "Writing \u2013 review & editing";
})(CreditRole || (CreditRole = {}));
/**
 * Descriptions of the CRediT roles (https://credit.niso.org)
 */
export const CreditDescriptions = {
    [CreditRole.Conceptualization]: 'Ideas; formulation or evolution of overarching research goals and aims.',
    [CreditRole.DataCuration]: 'Management activities to annotate (produce metadata), scrub data and maintain research data (including software code, where it is necessary for interpreting the data itself) for initial use and later re-use.',
    [CreditRole.FormalAnalysis]: 'Application of statistical, mathematical, computational, or other formal techniques to analyse or synthesize study data.',
    [CreditRole.FundingAcquisition]: 'Acquisition of the financial support for the project leading to this publication.',
    [CreditRole.Investigation]: 'Conducting a research and investigation process, specifically performing the experiments, or data/evidence collection.',
    [CreditRole.Methodology]: 'Development or design of methodology; creation of models.',
    [CreditRole.ProjectAdministration]: 'Management and coordination responsibility for the research activity planning and execution.',
    [CreditRole.Resources]: 'Provision of study materials, reagents, materials, patients, laboratory samples, animals, instrumentation, computing resources, or other analysis tools.',
    [CreditRole.Software]: 'Programming, software development; designing computer programs; implementation of the computer code and supporting algorithms; testing of existing code components.',
    [CreditRole.Supervision]: 'Oversight and leadership responsibility for the research activity planning and execution, including mentorship external to the core team.',
    [CreditRole.Validation]: 'Verification, whether as a part of the activity or separate, of the overall replication/reproducibility of results/experiments and other research outputs.',
    [CreditRole.Visualization]: 'Preparation, creation and/or presentation of the published work, specifically visualization/data presentation.',
    [CreditRole.WritingOriginalDraft]: 'Preparation, creation and/or presentation of the published work, specifically writing the initial draft (including substantive translation).',
    [CreditRole.WritingReviewEditing]: 'Preparation, creation and/or presentation of the published work by those from the original research group, specifically critical review, commentary or revision – including pre- or post-publication stages.',
};
/**
 * CRediT roles as a list of strings
 */
export const ROLES = Object.keys(CreditDescriptions); // enums are not easy to index
const ALIAS_ROLES = {
    writing: CreditRole.WritingOriginalDraft,
    editing: CreditRole.WritingReviewEditing,
    review: CreditRole.WritingReviewEditing,
    analysis: CreditRole.FormalAnalysis,
    funding: CreditRole.FundingAcquisition,
    admin: CreditRole.ProjectAdministration,
    administration: CreditRole.ProjectAdministration,
};
/**
 * Standardize various strings to a common string with british spelling, not for external use.
 */
function standardize(v) {
    return v
        .trim()
        .toLowerCase()
        .replaceAll('z', 's') // This accounts for british spelling ...
        .split('')
        .reduce((s, n) => {
        if (n.match(/([a-z])/))
            return [...s, n];
        const last = s[s.length - 1];
        if (!(last === null || last === void 0 ? void 0 : last.match(/([a-z])/)))
            return s;
        return [...s, '-'];
    }, [])
        .join('');
}
const STANDARDIZED_ROLES = Object.fromEntries(ROLES.map((v) => [standardize(v), v]));
export function normalize(value, opts) {
    var _a, _b;
    if (!value)
        return undefined;
    if (ROLES.includes(value))
        return value;
    if (opts === null || opts === void 0 ? void 0 : opts.strict)
        return undefined;
    return ((_b = (_a = STANDARDIZED_ROLES[standardize(value)]) !== null && _a !== void 0 ? _a : ALIAS_ROLES[value.toLowerCase().trim()]) !== null && _b !== void 0 ? _b : undefined);
}
/**
 * Validate that the input string is a valid CRediT role.
 *
 * @param value
 * @returns true if CRediT role is valid
 */
export function validate(value, opts) {
    if (!value)
        return false;
    return !!normalize(value, opts);
}
/**
 * Builds a canonical URL pointing to https://credit.niso.org/
 *
 * @param value
 * @returns the CRediT role as a string
 */
export function buildUrl(value, opts) {
    const role = normalize(value, opts);
    if (!role)
        return undefined;
    const url = role.toLowerCase().replace('– ', '').replace('& ', '').replaceAll(' ', '-');
    return `${CREDIT_URL}contributor-roles/${url}/`;
}
export const credit = {
    validate,
    normalize,
    buildUrl,
};
