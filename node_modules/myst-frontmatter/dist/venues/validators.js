import { defined, incrementOptions, validateObjectKeys, validateString, validateUrl, } from 'simple-validators';
/**
 * Validate Venue object against the schema
 *
 * If 'value' is a string, venue will be coerced to object { title: value }
 */
export function validateVenue(input, opts) {
    let titleOpts;
    if (typeof input === 'string') {
        input = { title: input };
        titleOpts = opts;
    }
    else {
        // This means 'venue.title' only shows up in errors if present in original input
        titleOpts = incrementOptions('title', opts);
    }
    const value = validateObjectKeys(input, { optional: ['title', 'url'] }, opts);
    if (value === undefined)
        return undefined;
    const output = {};
    if (defined(value.title)) {
        output.title = validateString(value.title, titleOpts);
    }
    if (defined(value.url)) {
        output.url = validateUrl(value.url, incrementOptions('url', opts));
    }
    return output;
}
