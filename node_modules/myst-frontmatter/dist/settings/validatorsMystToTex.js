import { defined, incrementOptions, validateBoolean, validateChoice, validateObjectKeys, } from 'simple-validators';
export const MYST_TO_TEX_SETTINGS = ['codeStyle', 'beamer'];
export const MYST_TO_TEX_SETTINGS_ALIAS = {
    code_style: 'codeStyle',
};
export function validateMystToTexSettings(value, opts) {
    const output = {};
    const settings = validateObjectKeys(value, { optional: MYST_TO_TEX_SETTINGS, alias: MYST_TO_TEX_SETTINGS_ALIAS }, opts);
    if (!settings)
        return undefined;
    if (defined(settings.codeStyle)) {
        const codeStyle = validateChoice(settings.codeStyle, {
            ...incrementOptions('codeStyle', opts),
            choices: ['verbatim', 'minted', 'listings'],
        });
        if (codeStyle)
            output.codeStyle = codeStyle;
    }
    if (defined(settings.beamer)) {
        const beamer = validateBoolean(settings.beamer, incrementOptions('beamer', opts));
        if (beamer != null)
            output.beamer = beamer;
    }
    // if (defined(settings.printGlossaries)) {
    //   const printGlossaries = validateBoolean(
    //     settings.printGlossaries,
    //     incrementOptions('printGlossaries', opts),
    //   );
    //   if (typeof printGlossaries === 'boolean') output.printGlossaries = printGlossaries;
    // }
    if (Object.keys(output).length === 0)
        return undefined;
    return output;
}
